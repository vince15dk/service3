# Build the Go Binary.
FROM golang:1.16 as build_sales-api
# Disable CGO in order to make sure that the binary is not binding itself to anything related to that golang image, it used to be concerned in the past, but not anymore, and it is only for warm fuzziness.
ENV CGO_ENABLED 0
ARG BUILD_REF

# Copy the module files first and then download the dependencies. If this doesn't change, we won't need to do this again in future builds.
##COPY go.* /service/
##WORKDIR /service
##RUN go mod download

# Copy the source code into the container.
COPY . /service

# Build the admin binary.
WORKDIR /service/app/tooling/admin
RUN go build -ldflags "-X main.build=${BUILD_REF}"

WORKDIR /service/app/services/sales-api
RUN go build -ldflags "-X main.build=${BUILD_REF}"

# Run the Go Binary in Alpine.
FROM alpine:3.14
ARG BUILD_DATE
ARG BUILD_REF
USER 0
RUN apk --no-cache add tzdata && \
    cp /usr/share/zoneinfo/Asia/Seoul /etc/localtime && \
    echo "Asia/Seoul" > /etc/timezone

COPY --from=build_sales-api /service/zarf/keys/. /service/zarf/keys/.
COPY --from=build_sales-api /service/app/tooling/admin/admin /service/admin
COPY --from=build_sales-api /service/app/services/sales-api/sales-api /service/sales-api

WORKDIR /service
CMD ["./sales-api"]

LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.title="sales-api" \
      org.opencontainers.image.authors="William Kennedy <bill@ardanlabs.com>" \
      org.opencontainers.image.source="https://github.com/ardanlabs/service/app/sales-api" \
      org.opencontainers.image.revision="${BUILD_REF}" \
      org.opencontainers.image.vendor="Ardan Labs"